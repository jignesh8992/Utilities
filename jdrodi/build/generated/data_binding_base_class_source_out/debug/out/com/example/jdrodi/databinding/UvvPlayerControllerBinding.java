// Generated by view binder compiler. Do not edit!
package com.example.jdrodi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jdrodi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UvvPlayerControllerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final ImageView centerPlayBtn;

  @NonNull
  public final RelativeLayout controlLayout;

  @NonNull
  public final TextView duration;

  @NonNull
  public final LinearLayout errorLayout;

  @NonNull
  public final TextView hasPlayed;

  @NonNull
  public final LinearLayout loadingLayout;

  @NonNull
  public final ImageButton scaleButton;

  @NonNull
  public final SeekBar seekbar;

  @NonNull
  public final TextView title;

  @NonNull
  public final LinearLayout titlePart;

  @NonNull
  public final ImageButton turnButton;

  private UvvPlayerControllerBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton backBtn,
      @NonNull ImageView centerPlayBtn, @NonNull RelativeLayout controlLayout,
      @NonNull TextView duration, @NonNull LinearLayout errorLayout, @NonNull TextView hasPlayed,
      @NonNull LinearLayout loadingLayout, @NonNull ImageButton scaleButton,
      @NonNull SeekBar seekbar, @NonNull TextView title, @NonNull LinearLayout titlePart,
      @NonNull ImageButton turnButton) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.centerPlayBtn = centerPlayBtn;
    this.controlLayout = controlLayout;
    this.duration = duration;
    this.errorLayout = errorLayout;
    this.hasPlayed = hasPlayed;
    this.loadingLayout = loadingLayout;
    this.scaleButton = scaleButton;
    this.seekbar = seekbar;
    this.title = title;
    this.titlePart = titlePart;
    this.turnButton = turnButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UvvPlayerControllerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UvvPlayerControllerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.uvv_player_controller, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UvvPlayerControllerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.center_play_btn;
      ImageView centerPlayBtn = ViewBindings.findChildViewById(rootView, id);
      if (centerPlayBtn == null) {
        break missingId;
      }

      id = R.id.control_layout;
      RelativeLayout controlLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlLayout == null) {
        break missingId;
      }

      id = R.id.duration;
      TextView duration = ViewBindings.findChildViewById(rootView, id);
      if (duration == null) {
        break missingId;
      }

      id = R.id.error_layout;
      LinearLayout errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }

      id = R.id.has_played;
      TextView hasPlayed = ViewBindings.findChildViewById(rootView, id);
      if (hasPlayed == null) {
        break missingId;
      }

      id = R.id.loading_layout;
      LinearLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.scale_button;
      ImageButton scaleButton = ViewBindings.findChildViewById(rootView, id);
      if (scaleButton == null) {
        break missingId;
      }

      id = R.id.seekbar;
      SeekBar seekbar = ViewBindings.findChildViewById(rootView, id);
      if (seekbar == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_part;
      LinearLayout titlePart = ViewBindings.findChildViewById(rootView, id);
      if (titlePart == null) {
        break missingId;
      }

      id = R.id.turn_button;
      ImageButton turnButton = ViewBindings.findChildViewById(rootView, id);
      if (turnButton == null) {
        break missingId;
      }

      return new UvvPlayerControllerBinding((RelativeLayout) rootView, backBtn, centerPlayBtn,
          controlLayout, duration, errorLayout, hasPlayed, loadingLayout, scaleButton, seekbar,
          title, titlePart, turnButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
